// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppMVCbasics2app.Database;

namespace WebAppMVCbasics2app.Migrations
{
    [DbContext(typeof(PeopleDbContext))]
    [Migration("20210508051644_AddCityAndCountry")]
    partial class AddCityAndCountry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppMVCbasics2app.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PersonInCityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonInCityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("WebAppMVCbasics2app.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityInCountryId")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CityInCountryId")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("WebAppMVCbasics2app.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(59)
                        .HasColumnType("nvarchar(59)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("WebAppMVCbasics2app.Models.City", b =>
                {
                    b.HasOne("WebAppMVCbasics2app.Models.Person", "PersonInCity")
                        .WithMany()
                        .HasForeignKey("PersonInCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonInCity");
                });

            modelBuilder.Entity("WebAppMVCbasics2app.Models.Country", b =>
                {
                    b.HasOne("WebAppMVCbasics2app.Models.City", "CityInCountry")
                        .WithOne("country")
                        .HasForeignKey("WebAppMVCbasics2app.Models.Country", "CityInCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityInCountry");
                });

            modelBuilder.Entity("WebAppMVCbasics2app.Models.City", b =>
                {
                    b.Navigation("country")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
